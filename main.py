import telebot
from telebot import TeleBot
from tok import keys
from tok import TOKEN

from extensions import ConvertionException, CryptoConverter

bot: TeleBot = telebot.TeleBot(TOKEN)

# –ø–µ—Ä–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=['start', 'help'])
def help(message: telebot.types.Message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é, {message.chat.username}, —ç—Ç–æ –±–æ—Ç –æ–±–º–µ–Ω–Ω–∏–∫ –≤–∞–ª—é—Ç, —Å–ª–µ–¥—É–π—Ç–µ –º–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º")
    text = 'üíµ –ù–∞–∂–º–∏ –Ω–∞ /valuta —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç üíµ\n'
    bot.reply_to(message, text)


# –ß–ê–°–¢–¨ 1

#  –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ  –∫—É—Ä—Å—ã
@bot.message_handler(commands=['valuta'])
def operations(message: telebot.types.Message):
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:'
    for key in keys.keys():
        text = '\n'.join((text,key))
    text = '–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n <–∏–∑ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –ø–µ—Ä–µ–≤–æ–¥–∏–º> <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã>'
    bot.reply_to(message, text)

# –ß–ê–°–¢–¨ 2
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞–ª—é—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
def get_price(message: telebot.types.Message):
    try:
        message.text= message.text.lower()  #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–∞–∫–∏–µ —Ç–æ –±—É–∫–≤—ã –±–æ–ª—å—à–∏–µ, —Ç–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º
        values = message.text.split(' ')
        quote, base, amount = values
        total_base=CryptoConverter.convert(quote, base, amount)
        amount = float(amount)
        total_base = float(total_base)
    except ConvertionException as e:
        bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è{e}')
    except Exception as e:
        if len(values) != 3:
            bot.reply_to(message,'–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –∏–∑–º–µ–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å')
        else:
            bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e} \n üíµ –ù–∞–∂–º–∏ –Ω–∞ /valuta —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç üíµ')
    else:
        if amount<0:                                                    #–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            bot.reply_to(message,'–í—ã –≤–≤–µ–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        else:
            text = f'–¶–µ–Ω–∞ {amount} {quote} –≤ {base} = {total_base*amount}'
            bot.send_message(message.chat.id, text)
       




# –û—Ç–≤–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
@bot.message_handler(content_types=['photo'])
def say_lmao(message: telebot.types.Message):
    bot.reply_to(message, '–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–≤–∞, –∫–æ—Ç–∏–∫–æ–≤. –õ—é–±–ª—é –∫–æ—Ç–∏–∫–æ–≤. –ú—É—Äüò∏')

# –û—Ç–≤–µ—Ç –Ω–∞ –∞—É–¥–∏–æ
@bot.message_handler(content_types=['voice'])
def handle_docs_audio(message):
    bot.reply_to(message, '–ü—Ä–æ–±–æ–≤–∞–ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤–æ–∫–∞–ª–æ–º? –î—É–º–∞—é, —á—Ç–æ —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è')


# –û—Ç–≤–µ—Ç –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—é
@bot.message_handler(content_types=['animation'])
def say_lmao(message: telebot.types.Message):
    bot.reply_to(message, 'ü§™')


# –û—Ç–≤–µ—Ç –Ω–∞ —Å—Ç–∏–∫–µ—Ä
@bot.message_handler(content_types=['sticker'])
def say_lmao(message: telebot.types.Message):
    bot.reply_to(message, 'üêô')


# –û—Ç–≤–µ—Ç –Ω–∞ –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def say_lmao(message: telebot.types.Message):
    bot.reply_to(message, 'NICE vidos')

bot.polling(none_stop=True)
